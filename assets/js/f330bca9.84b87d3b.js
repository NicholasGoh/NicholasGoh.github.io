"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3632],{4088:e=>{e.exports=JSON.parse('{"permalink":"/blog/etl-automation","source":"@site/blog/2025-02-01-etl-automation/index.mdx","title":"ETL Automation","description":"Introduction","date":"2025-02-01T00:00:00.000Z","tags":[{"inline":true,"label":"agentic-workflow","permalink":"/blog/tags/agentic-workflow"}],"readingTime":7.955,"hasTruncateMarker":true,"authors":[{"name":"Nicholas Goh","title":"AI Full Stack Engineer","url":"https://nicholas-goh.com","page":{"permalink":"/blog/authors/all-nicholas-goh-articles"},"socials":{"linkedin":"https://www.linkedin.com/in/nicholas-goh-19ba1b194/","github":"https://github.com/NicholasGoh"},"imageURL":"https://avatars.githubusercontent.com/u/58037050?s=400&u=cc1cb1686de3cfbf92b95cd8b8bad22291c1a068&v=4","key":"nicholas"}],"frontMatter":{"slug":"etl-automation","title":"ETL Automation","authors":["nicholas"],"tags":["agentic-workflow"]},"unlisted":false,"prevItem":{"title":"Customer Service Automation","permalink":"/blog/customer-service-automation"},"nextItem":{"title":"Agentic RAG","permalink":"/blog/agentic-rag"}}')},7025:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>h});var t=i(4088),s=i(4848),r=i(8453),a=i(3554),o=i.n(a);const l={slug:"etl-automation",title:"ETL Automation",authors:["nicholas"],tags:["agentic-workflow"]},c=void 0,d={authorsImageUrls:[void 0]},h=[{value:"Introduction",id:"introduction",level:2},{value:"AI\u2019s Business Impact: Aligning Technology with Strategy",id:"ais-business-impact-aligning-technology-with-strategy",level:2},{value:"The Importance of Orchestration",id:"the-importance-of-orchestration",level:3},{value:"Demo",id:"demo",level:2},{value:"Navigating Trade-offs in AI System Design",id:"navigating-trade-offs-in-ai-system-design",level:2},{value:"Prebuilt Agent",id:"prebuilt-agent",level:3},{value:"Pros",id:"pros",level:4},{value:"Cons",id:"cons",level:4},{value:"Alternative: Langgraph",id:"alternative-langgraph",level:3},{value:"<strong>Pros</strong>",id:"pros-1",level:4},{value:"<strong>Cons</strong>",id:"cons-1",level:4},{value:"Scaling AI Systems: Architectural and Operational Insights",id:"scaling-ai-systems-architectural-and-operational-insights",level:2},{value:"Scaling Considerations for a Small User Base",id:"scaling-considerations-for-a-small-user-base",level:3},{value:"Exploring Groq for Fast Agentic Workflows",id:"exploring-groq-for-fast-agentic-workflows",level:3},{value:"Failure Analysis: Debugging and Mitigating AI Pitfalls",id:"failure-analysis-debugging-and-mitigating-ai-pitfalls",level:2},{value:"The Interplay Between Prompts and Models",id:"the-interplay-between-prompts-and-models",level:3},{value:"The Importance of a Hallucination Detection Module",id:"the-importance-of-a-hallucination-detection-module",level:3},{value:"Security Risks and Best Practices in AI Systems",id:"security-risks-and-best-practices-in-ai-systems",level:2},{value:"API Key Exposure and Mitigation Strategies",id:"api-key-exposure-and-mitigation-strategies",level:3},{value:"Long-Term Security Considerations",id:"long-term-security-considerations",level:3},{value:"Lessons Learned from AI Deployments",id:"lessons-learned-from-ai-deployments",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["In this blog, I explore how automation simplifies problem-solving by testing AI\u2019s ability to break tasks into subproblems. This use case worked with a single agent, but more complex problems require multi-agent orchestration\u2014covered in the ",(0,s.jsx)(n.a,{href:"/blog/customer-service-automation",children:"next blog"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"ais-business-impact-aligning-technology-with-strategy",children:"AI\u2019s Business Impact: Aligning Technology with Strategy"}),"\n",(0,s.jsx)(n.p,{children:"Data ingestion is often a bottleneck for businesses dealing with multiple service providers. The challenge isn't just handling large volumes of data\u2014it\u2019s managing provider-specific schemas, adapting to schema changes, and maintaining consistency across updates. Manually handling these variations is tedious, error-prone, and difficult to scale."}),"\n",(0,s.jsx)(n.p,{children:"AI-powered automation can help mitigate these challenges by:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Assisting with schema adaptation when providers update their formats."}),"\n",(0,s.jsx)(n.li,{children:"Reducing operational overhead, allowing teams to focus on higher-value tasks."}),"\n",(0,s.jsx)(n.li,{children:"Improving efficiency and minimizing downtime caused by schema mismatches."}),"\n",(0,s.jsx)(n.li,{children:"Supporting more reliable decision-making with structured, up-to-date data ingestion."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"However, AI is not a silver bullet. Risks like hallucinated transformations or misinterpretations of schema changes require robust safeguards. Detailed logging and iterative improvements help detect issues, refine workflows, and adapt the system over time."}),"\n",(0,s.jsx)(n.p,{children:"For businesses looking to scale, balancing automation with oversight is key. Tracking queries, intermediate steps, and outputs can help to detect errors and patterns. This can help improve the system over time."}),"\n",(0,s.jsx)(n.h3,{id:"the-importance-of-orchestration",children:"The Importance of Orchestration"}),"\n",(0,s.jsx)(n.p,{children:"LLMs generate text but cannot execute code. To incorporate execution, they must delegate tasks to external tools and refine responses based on the results. The diagram below illustrates this orchestration. Can this be achieved using prebuilt solutions, or does it require a custom implementation?"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD;\n    A[User Query] --\x3e B[LLM]\n    B -.-> C[Tool]\n    B -.->|Self Reflection| B\n    B -.-> D[Finish]\n    C --\x3e B\n\nsubgraph Legend\n    L1(( )) -.->|Optional| L2(( ))\n    L3(( )) --\x3e|Mandatory| L4(( ))\nend"}),"\n",(0,s.jsx)(n.h2,{id:"demo",children:"Demo"}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsx)(n.a,{href:"https://nicholas-goh.com/use-cases/etl-automation/ui",children:"demo"})," before we explore the challenges, technical details, and key insights."]}),"\n",(0,s.jsx)(o(),{playing:!0,controls:!0,url:"/vid/etl-automation/etl-automation.MOV"}),"\n",(0,s.jsx)(n.h2,{id:"navigating-trade-offs-in-ai-system-design",children:"Navigating Trade-offs in AI System Design"}),"\n",(0,s.jsx)(n.h3,{id:"prebuilt-agent",children:"Prebuilt Agent"}),"\n",(0,s.jsxs)(n.p,{children:["Langchain provides a ",(0,s.jsx)(n.a,{href:"https://github.com/langchain-ai/langchain-experimental/blob/libs/experimental/v0.3.4/libs/experimental/langchain_experimental/agents/agent_toolkits/pandas/base.py#L152",children:"prebuilt"})," CSV Agent. At first glance, it seems to solve the problem of orchestration for me, however, on closer inspection, there are some concerns."]}),"\n",(0,s.jsx)(n.h4,{id:"pros",children:"Pros"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feature"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Ease of Use"})}),(0,s.jsx)(n.td,{children:"Works out of the box with minimal setup"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Streaming Events"})}),(0,s.jsx)(n.td,{children:"Supports real-time streaming with intermediate thoughts and actions"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Observability"})}),(0,s.jsx)(n.td,{children:"Built-in event streaming makes reasoning process transparent"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Orchestration"})}),(0,s.jsx)(n.td,{children:"Manages tool selection, execution, and self-reflection in a loop until a final response is generated"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Mental Load"})}),(0,s.jsx)(n.td,{children:"Frees up cognitive effort to focus on high-level problem solving"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Quick Deployment"})}),(0,s.jsx)(n.td,{children:"Requires minimal configuration, enabling rapid prototyping"})]})]})]}),"\n",(0,s.jsxs)(n.admonition,{title:"Example Streamed Event",type:"info",children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"AgentAction(\n  tool='python_repl_ast',\n  tool_input=\"df[(df['Event Details'].str.contains('09-08-2018')) & (df['Frequency'] == 'Recurring')]\",\n  log='Thought: I need to check if there are any monthly bookings on 9 August 2018 in the dataframe. I will filter the dataframe for entries with the date \"09-08-2018\" and a frequency of \"Recurring\". Then, I will extract the relevant details for any such bookings.\\n\\nAction: python_repl_ast\\nAction Input: df[(df[\\'Event Details\\'].str.contains(\\'09-08-2018\\')) & (df[\\'Frequency\\'] == \\'Recurring\\')] '\n  observation='''\n    Customer Invoice No.,Event Details,Link Event,Customer Name,Provider Name,Frequency,Hourly Rate,Duration,Amount Gross,Amendments,Gross Difference,Unnamed: 11\n    1b1c9f58-bd91-4289-929f-948e718e2473,04-08-2018 09:30,link,Alice Ng,SparkleClean Services,Cancellation,22.5,2.5,0.0,Yes,-66.25,\n    ...\n    '''\n)\n"})}),(0,s.jsx)(n.p,{children:"As seen above, prebuilt agent will:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["handle ",(0,s.jsx)(n.a,{href:"#the-importance-of-orchestration",children:"the orchestration"})]}),"\n",(0,s.jsxs)(n.li,{children:["streamed events that can be transmitted to the frontend using a preferred server-client communication method (e.g., WebSockets, Server-Sent Events)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"this enables real-time rendering of the agent's thought process, enhancing transparency and user experience."}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,s.jsx)(n.h4,{id:"cons",children:"Cons"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feature"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Limited Flexibility"})}),(0,s.jsx)(n.td,{children:"Predefined agents exist (e.g., Pandas Dataframe Agent), but lacks support for problems that requires specialized agents"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Restricted Orchestration Between Agents"})}),(0,s.jsx)(n.td,{children:"Difficult to implement complex multi-agent workflows when the problem demands specialized coordination"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"For this blog, the Pandas DataFrame Agent is well-suited for the ETL use case, making LangChain\u2019s prebuilt solution a practical choice. The problem scope does not require multi-agent coordination, so the limitations in orchestration are not a concern here. However, I will still explore an alternative that offers greater flexibility in designing custom agent interactions: LangGraph."}),"\n",(0,s.jsx)(n.h3,{id:"alternative-langgraph",children:"Alternative: Langgraph"}),"\n",(0,s.jsx)(n.p,{children:"Langgraph presents a compelling alternative when the use case demands greater flexibility in orchestrating multiple agents. Unlike Langchain\u2019s predefined agents, Langgraph allows for customizable workflows, enabling multi-agent collaboration, conditional logic, and more complex decision-making."}),"\n",(0,s.jsx)(n.h4,{id:"pros-1",children:(0,s.jsx)(n.strong,{children:"Pros"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feature"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Flexible Orchestration"})}),(0,s.jsx)(n.td,{children:"Allows for complex agent workflows, including multi-agent interactions, conditional branching, and asynchronous execution."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Fine-Grained Control"})}),(0,s.jsx)(n.td,{children:"Developers can define precise execution logic, ensuring that agents interact optimally based on the use case\u2019s needs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Extensibility"})}),(0,s.jsx)(n.td,{children:"Provides a modular foundation to scale and integrate with other AI components as requirements evolve."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"cons-1",children:(0,s.jsx)(n.strong,{children:"Cons"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feature"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Increased Complexity"})}),(0,s.jsx)(n.td,{children:"Greater customization comes with a steeper learning curve and higher development effort compared to Langchain\u2019s prebuilt agents."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Manual Implementation Required"})}),(0,s.jsx)(n.td,{children:"Orchestration has to be manually implemented as opposed to the prebuilt one in Langchain."})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["While Langchain\u2019s predefined agents are sufficient for this ETL use case, exploring Langgraph lays the groundwork for the ",(0,s.jsx)(n.a,{href:"/blog/customer-service-automation",children:"next blog"}),", where the problem scope justifies the need for a more advanced, multi-agent orchestration approach. Given this, I ultimately chose to implement Langgraph for this blog."]}),"\n",(0,s.jsx)(n.h2,{id:"scaling-ai-systems-architectural-and-operational-insights",children:"Scaling AI Systems: Architectural and Operational Insights"}),"\n",(0,s.jsx)(n.h3,{id:"scaling-considerations-for-a-small-user-base",children:"Scaling Considerations for a Small User Base"}),"\n",(0,s.jsx)(n.p,{children:"The initial goal is to support tens of users effectively while ensuring a balance between performance and cost-efficiency. Right out of the box, the OpenAI API and FastAPI as the backend handle concurrency efficiently, reducing the need for additional scaling efforts in the early stages."}),"\n",(0,s.jsx)(n.h3,{id:"exploring-groq-for-fast-agentic-workflows",children:"Exploring Groq for Fast Agentic Workflows"}),"\n",(0,s.jsx)(n.p,{children:"Groq presents an alternative cloud provider for LLMs, particularly excelling in agentic workflows requiring rapid responses. Key observations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It delivers significantly faster inference times, enhancing user experience."}),"\n",(0,s.jsx)(n.li,{children:"From my experience, it tends to be more talkative but less effective at solving tasks compared to GPT-4O-Mini."}),"\n",(0,s.jsx)(n.li,{children:"The cost is approximately six times higher than mainstream alternatives."}),"\n",(0,s.jsx)(n.li,{children:"Given the above trade-offs, I did not invest heavily in prompt engineering, as the core focus of this blog is not on achieving low latency."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'Choosing the right LLM cloud provider with my current goal in mind is essential\u2014treating this as a stepping stone rather than an endless pursuit of the "best" solution. There will always be "better" approaches for different use cases, but without a clear stopping point, I risk constantly iterating without making real progress.'}),"\n",(0,s.jsx)(n.h2,{id:"failure-analysis-debugging-and-mitigating-ai-pitfalls",children:"Failure Analysis: Debugging and Mitigating AI Pitfalls"}),"\n",(0,s.jsx)(n.h3,{id:"the-interplay-between-prompts-and-models",children:"The Interplay Between Prompts and Models"}),"\n",(0,s.jsxs)(n.p,{children:["Given the scaling experiment ",(0,s.jsx)(n.a,{href:"#scaling-considerations-for-a-small-user-base",children:"above"}),", I noticed that prompt-model tagging will be necessary should I continue on the path of different models in production. As each model is trained differently, prompts are model-specific and should be tagged to each model for best results."]}),"\n",(0,s.jsx)(n.h3,{id:"the-importance-of-a-hallucination-detection-module",children:"The Importance of a Hallucination Detection Module"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD;\n    A[User Query] --\x3e B[LLM]\n    B -.-> C[Hallucination Reduction Module]\n    C -.-> D[Tool]\n    D --\x3e B\n    C -.->|Self Reflection| B\n    B -.-> E[Finish]\n\nsubgraph Legend\n    L1(( )) -.->|Optional| L2(( ))\n    L3(( )) --\x3e|Mandatory| L4(( ))\nend"}),"\n",(0,s.jsx)(n.p,{children:"In hindsight, integrating a hallucination detection module is crucial, even if it does not entirely prevent incorrect outputs. It provides an additional layer of reasoning and debugging, helping to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Detect inconsistencies in model-generated responses before Python pandas code is executed"}),"\n",(0,s.jsx)(n.li,{children:"Reduces the risk of propagating erroneous outputs."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"However, implementing such a module increases system complexity. Given this, I hope to cover better orchestration strategies in a separate blog."}),"\n",(0,s.jsx)(n.h2,{id:"security-risks-and-best-practices-in-ai-systems",children:"Security Risks and Best Practices in AI Systems"}),"\n",(0,s.jsx)(n.p,{children:"Using a prebuilt pandas DataFrame agent introduces security risks by exposing system Python execution to anyone accessing the system. In a production environment, this can have serious implications:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Containerized Deployment on AWS"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The production environment runs in AWS-managed containers."}),"\n",(0,s.jsx)(n.li,{children:"Containers are ephemeral\u2014if the environment is corrupted, they can be easily destroyed and redeployed."}),"\n",(0,s.jsx)(n.li,{children:"They contain nothing of value other than the API key (discussed in the next section)."}),"\n",(0,s.jsx)(n.li,{children:"My personal desktop remains unaffected by these risks."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"api-key-exposure-and-mitigation-strategies",children:"API Key Exposure and Mitigation Strategies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Risk of OpenAI API Key Exposure"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The API key must be accessible on the production server to interact with GPT-4O-Mini."}),"\n",(0,s.jsx)(n.li,{children:"While restricting API key exposure at the prompt level (e.g., preventing it from being output) may seem like a solution, it can be bypassed via jailbreak techniques."}),"\n",(0,s.jsxs)(n.li,{children:["To mitigate this, I have enforced security at the code level, ensuring the API key is never exposed in logs, responses, or accessible environments.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Additionally, I have implemented usage limits at the API provider level to cap monthly expenses, serving as a fail-safe in case of unexpected leaks or abuse."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Potential and Unknown Attack Vectors"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Despite implemented safeguards, I am aware of specific ways my API key could still be leaked."}),"\n",(0,s.jsx)(n.li,{children:"Additionally, unknown vulnerabilities may exist, which need continuous assessment and mitigation."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"long-term-security-considerations",children:"Long-Term Security Considerations"}),"\n",(0,s.jsx)(n.p,{children:"If this system is scaled further, securing the API key and the overall infrastructure must be a top priority. A more comprehensive approach\u2014including environment isolation, access controls, and strict request validation\u2014should be taken to minimize security risks."}),"\n",(0,s.jsx)(n.h2,{id:"lessons-learned-from-ai-deployments",children:"Lessons Learned from AI Deployments"}),"\n",(0,s.jsx)(n.p,{children:"Agentic workflows are just tools, not solutions\u2014they require a clear use case or domain-specific challenge to be effective. Not every problem warrants an agentic approach; the complexity must justify the need for automation. Scalability and efficiency should be considered from the start, ensuring workflows remain adaptable through iterative improvements."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}}}]);